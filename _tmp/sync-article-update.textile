---
layout: post
title: RESTful API with sync
category : advice
tags : [restful, api, sync]
description: How to include sync functionality in your RESTful API without reinventing the wheel.
keywords: restful, api, sync
---

It seems opening your API is currently the best thing since sliced bread, and for the record, we at "Toshl":https://toshl.com are doing the same thing later this month.

If your API has a lot of data it needs to send to the client, it wouldn't be the best idea to send everything at once. There needs to be a way for the client to inform the server that it needs only the changed data.

h2. Since timestamp

The best way is to include a @?since=timestamp@ in the query. When the server sees this in the request, instead of returning everything again, it returns only the data changed since the provided timestamp. But one more question does come to mind: How does the client know which timestamp to send?

Relying on the client to send a local timestamp is generally not a good idea, seeing as you don't control the device. It is a much better idea for the server to send the timestamp. The only question left to answer is how to transfer this timestamp to the client.

I like keeping my JSON responses clean, and including a timestamp in the response just messes that up for me.

<pre>[{"list": objects, "timestamp": timestamp}]</pre>

Instead of having just an array of items, you are forced into a list of objects and an extra parameter for timestamp. Not very nice from my point of view.

h2. Add Last-Modified in your response

Why not use something that the HTTP protocol already has built in? @Last-Modified@ is just what we need.

bq. The Last-Modified entity-header field indicates the date and time at which the origin server believes the variant was last modified.
-- "RFC 2616":http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.29

h2. Conclusion

So there you have it. A simple way of extending your RESTful API for sync support with minimum overhead on the client side. Whenever the client sees a @Last-Modified@ header in the response, the server is announcing that it supports sync. It is up to the client to include the @?since=timestamp@ parameter in the next request, otherwise the server will return entire data again.

"Discuss it on Hacker News":http://news.ycombinator.com/item?id=4531773.